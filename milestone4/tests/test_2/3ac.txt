     .globl main
_main:
     rsp - 48
    #t_0 = 1
    rbp[-8] = #t_0
    #t_1 = 2
    rbp[-16] = #t_1
    #t_2 = 10
    rbp[-24] = #t_2
    #t_3 = 4
    rbp[-32] = #t_3
.L1:
    #t_4 = rbp[-32]
    #t_5 = 5
    if #t_4 < #t_5 goto .L3
    goto .L11
.L2:
    #t_6 = rbp[-32]
    #t_6 = #t_6 + 1
    rbp[-32] = #t_6
    goto .L1
.L3:
    #t_7 = 9
    #t_8 = rbp[-32]
    #t_9 = #t_8 + #t_7
    rbp[-32] = #t_9
    #t_10 = rbp[-24]
    #t_10 = #t_10 - 1
    rbp[-24] = #t_10
    #t_11 = rbp[-32]
    #t_12 = 4
    if #t_11 > #t_12 goto .L4
    goto .L5
.L4:
    goto .L11
    goto .L6
.L5:
    #t_13 = 1
    rbp[-16] = #t_13
    #t_14 = rbp[-24]
    #t_14 = #t_14 + 1
    rbp[-24] = #t_14
.L6:
    #t_15 = 2
    rbp[-40] = #t_15
.L7:
    #t_16 = rbp[-40]
    #t_17 = 9
    if #t_16 < #t_17 goto .L9
    goto .L2
.L8:
    #t_18 = rbp[-40]
    #t_18 = #t_18 + 1
    rbp[-40] = #t_18
    goto .L7
.L9:
    #t_19 = rbp[-40]
    #t_20 = 3
    if #t_19 > #t_20 goto .L10
    goto .L8
.L10:
    goto .L2
    goto .L8
    goto .L2
.L11:
    #t_21 = rbp[-24]
    print(#t_21)
    #t_22 = rbp[-8]
    print(#t_22)
    #t_23 = rbp[-16]
    print(#t_23)
    mem(0)
    #t_24 = rax
    rbp[-48] = #t_24
    #t_25 = 5
    push #t_25
    push rbp[-48]
    call fin.fib
    rsp + 16
    #t_26 = rax
    print(#t_26)
    return
_fin.fib:
     rsp - 0
    #t_27 = rbp[24]
    #t_28 = 1
    if #t_27 <= #t_28 goto .L12
    goto .L13
.L12:
    #t_29 = 1
    rax = #t_29
    return
    goto .L14
.L13:
    #t_30 = 7
    rax = #t_30
    return
.L14:
    return
